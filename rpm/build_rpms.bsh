#!/usr/bin/env bash
set -eu
set -vx
CURDIR=$(cd $(dirname ${BASH_SOURCE[0]}); pwd)
SPEC=${CURDIR}/SPECS/git-lfs.spec
VERSION=$(\grep "^Version:" ${SPEC} | \grep -Eo [0-9.]+)
RPMBUILD=(rpmbuild --define "_topdir ${CURDIR}")
LOG=${CURDIR}/build.log
#YUM=${YUM:=yum}
YUM=${YUM:=sudo yum}
export PATH=${PATH}:/usr/local/bin

exec 6>&1
exec 7>&2

exec > $LOG
exec 2>> $LOG

echo "Downloading/checking for some essentials..." >&6
$YUM install -y curl which rpm-build tar

REDHAT_VERSION=($(head -n 1 /etc/redhat-release | \grep -Eo '[0-9]+'))
REDHAT_NAME=$(awk '{print $1}' /etc/redhat-release)

mkdir -p ${CURDIR}/{BUILD,BUILDROOT,SOURCES}

if [ ! -e ${CURDIR}/SOURCES/v${VERSION}.tar.gz ]; then
  echo "Downloading git-lfs..." >&6
  mkdir -p ${CURDIR}/SOURCES
  pushd  ${CURDIR}/SOURCES
    curl -L -O https://github.com/github/git-lfs/archive/v${VERSION}.tar.gz
  popd
fi

if ! which go; then
  echo "Installing go... one way or another" >&6
  if [[ ${REDHAT_VERSION[0]} == 5 ]]; then
    $YUM install curl.x86_64 glibc gcc
    ${CURDIR}/golang_patch.bsh
    "${RPMBUILD[@]}" -bb SPECS/golang.spec
    $YUM install -y --nogpgcheck RPMS/golang.rpm
  else
    $YUM install -y epel-release
    $YUM install -y golang
  fi
fi

if which ruby > /dev/null 2>&1; then
  IFS_OLD=${IFS}
  IFS=.
  RUBY_VERSION=($(ruby -e "print RUBY_VERSION"))
  IFS=${IFS_OLD}
else
  RUBY_VERSION=(0 0 0)
fi

if [[ ${RUBY_VERSION[0]} < 2 ]]; then
  if [[ ${REDHAT_VERSION[0]} < 7 ]]; then
    echo "Downloading ruby..." >&6

    if ! rpm -q epel-release; then
      if [[ ${REDHAT_VERSION[0]} == 5 ]]; then
        pushd ${CURDIR}
          sudo rpm --import http://apt.sw.be/RPM-GPG-KEY.dag.txt
          curl -L -O http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el5.rf.x86_64.rpm
          $YUM install -y rpmforge-release-0.5.3-1.el5.rf.*.rpm
        popd
      else
        $YUM install epel-release #Part of centos 6+
      fi
    fi

    $YUM install -y make patch libyaml-devel glibc-headers autoconf gcc-c++ glibc-devel readline-devel zlib-devel libffi-devel openssl-devel automake libtool sqlite-devel
    pushd ${CURDIR}/SOURCES
    curl -L -O http://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.2.tar.gz
    popd
    echo "Building ruby..." >&6
    "${RPMBUILD[@]}" -bb SPECS/ruby.spec
    echo "Installing ruby..." >&6
    $YUM install -y --nogpgcheck RPMS/x86_64/ruby*.rpm
  else
    $YUM insall -u ruby
  fi
fi

if ! which ronn; then
  echo "Downloading some ruby gems..." >&6
  pushd SOURCES
    curl -L -O https://rubygems.org/downloads/rdiscount-2.1.8.gem
    curl -L -O https://rubygems.org/downloads/hpricot-0.8.6.gem
    curl -L -O https://rubygems.org/downloads/mustache-1.0.1.gem
    curl -L -O https://rubygems.org/downloads/ronn-0.7.3.gem
  popd

  echo "Building ruby gems..." >&6
  "${RPMBUILD[@]}" -bb SPECS/rubygem-rdiscount.spec
  "${RPMBUILD[@]}" -bb SPECS/rubygem-mustache.spec
  "${RPMBUILD[@]}" -bb SPECS/rubygem-hpricot.spec
  "${RPMBUILD[@]}" -bb SPECS/rubygem-ronn.spec

  echo "Installing ruby gems..." >&6
  $YUM install -y --nogpgcheck RPMS/noarch/rubygem-*.rpm
fi
set -xv
"${RPMBUILD[@]}" -bs SPECS/git-lfs.spec
"${RPMBUILD[@]}" -bb SPECS/git-lfs.spec
